# main.py

from math import inf
from random import randint


from initialize import initialize_data
from generate_reference_data import generate_reference_data
from generate_graph_data import generate_graph_data
from generate_workerman_data import generate_workerman_data
from optimize import optimize


lodging = {
    "Velia": 6,
    "Heidel": 6,
    "Glish": 5,
    "Calpheon City": 6,
    "Olvia": 5,
    "Keplan": 5,
    "Port Epheria": 5,
    "Trent": 5,
    "Iliya Island": 0,
    "Altinova": 7,
    "Tarif": 5,
    "Valencia City": 6,
    "Shakatu": 5,
    "Sand Grain Bazaar": 5,
    "Ancado Inner Harbor": 0,
    "Arehaza": 5,
    "Old Wisdom Tree": 5,
    "Gr\u00e1na": 6,
    "Duvencrune": 5,
    "O'draxxia": 7,
    "Eilton": 5,
    "Dalbeol Village": 5,
    "Nampo's Moodle Village": 5,
    "Nopsae's Byeot County": 5,
    "Muzgar": 5,
    "Yukjo Street": 5,
    "Godu Village": 5,
    "Bukpo": 5,
}
modifiers = {}
prices = {
    "1024": 55575,
    "1025": 4610.666666666666,
    "1026": 29770,
    "1027": 153530,
    "4001": 1462.5,
    "4002": 773.5,
    "4003": 598,
    "4004": 2535,
    "4005": 3282.5,
    "4007": 1462.5,
    "4008": 6077.5,
    "4009": 6077.5,
    "4010": 591.5,
    "4011": 4842.5,
    "4013": 4842.5,
    "4015": 357.5,
    "4057": 1755,
    "4202": 2808,
    "4203": 27235,
    "4204": 14560,
    "4206": 25155,
    "4207": 3100.5,
    "4401": 2366,
    "4402": 2489.5,
    "4403": 2808,
    "4404": 2808,
    "4405": 2632.5,
    "4406": 4030,
    "4407": 5005,
    "4408": 4355,
    "4409": 4810,
    "4410": 4355,
    "4411": 858,
    "4412": 890.5,
    "4413": 2808,
    "4414": 11440,
    "4476": 197600,
    "4477": 122850,
    "4601": 461.5,
    "4602": 2626,
    "4603": 754,
    "4604": 2138.5,
    "4606": 2723.5,
    "4607": 2171,
    "4608": 1501.5,
    "4609": 2723.5,
    "4610": 617.5,
    "4611": 611,
    "4612": 235.3,
    "4614": 324.35,
    "4615": 331.5,
    "4616": 1599,
    "4619": 949,
    "4621": 3640,
    "4657": 3705,
    "4660": 4517.5,
    "4663": 10335,
    "4670": 1118,
    "4673": 1215.5,
    "4683": 2710.5,
    "4694": 981.5,
    "4697": 1332.5,
    "4701": 2177.5,
    "4801": 1469,
    "4802": 1482,
    "4803": 1053,
    "4804": 1514.5,
    "4805": 1326,
    "5001": 12740,
    "5002": 8710,
    "5003": 8385,
    "5004": 12740,
    "5005": 2704,
    "5006": 1579.5,
    "5007": 9750,
    "5008": 1261,
    "5009": 627.25,
    "5010": 11960,
    "5011": 1137.5,
    "5012": 5362.5,
    "5013": 7085,
    "5014": 5655,
    "5015": 682.5,
    "5016": 1839.5,
    "5017": 640.25,
    "5018": 1027,
    "5020": 18200,
    "5023": 728,
    "5024": 17420,
    "5205": 55575,
    "5401": 251.55,
    "5402": 288.6,
    "5404": 263.25,
    "5405": 251.55,
    "5407": 455,
    "5408": 503.75,
    "5409": 477.75,
    "5410": 438.75,
    "5411": 303.55,
    "5412": 383.5,
    "5413": 455,
    "5414": 503.75,
    "5421": 396.5,
    "5422": 455,
    "5425": 396.5,
    "5426": 981.5,
    "5427": 1358.5,
    "5428": 1404,
    "5429": 747.5,
    "5430": 1196,
    "5431": 825.5,
    "5432": 1118,
    "5433": 2411.5,
    "5451": 2515.5,
    "5471": 24245,
    "5516": 526.5,
    "5517": 15080,
    "5518": 298.35,
    "5519": 305.5,
    "5520": 317.85,
    "5521": 305.5,
    "5522": 968.5,
    "5532": 1612,
    "5544": 2450.5,
    "5546": 2450.5,
    "5548": 1482,
    "5550": 1332.5,
    "5801": 825.5,
    "5802": 393.25,
    "5803": 594.75,
    "5804": 708.5,
    "5851": 2970.5,
    "5852": 1579.5,
    "5853": 1911,
    "5854": 1384.5,
    "5960": 29770,
    "6501": 16445,
    "6504": 115050,
    "6505": 191100,
    "6506": 141050,
    "6656": 3315,
    "6657": 708.5,
    "7001": 728,
    "7002": 682.5,
    "7003": 637,
    "7004": 845,
    "7005": 604.5,
    "7009": 1436.5,
    "7014": 9425,
    "7016": 1144,
    "7017": 245.70000000000002,
    "7018": 715,
    "7019": 364,
    "7020": 1488.5,
    "7021": 347.75,
    "7022": 288.6,
    "7026": 871,
    "7304": 354.25,
    "7306": 565.5,
    "7307": 572,
    "7309": 559,
    "7312": 429,
    "7321": 6565,
    "7347": 265.2,
    "7348": 1137.5,
    "7360": 2060.5,
    "7702": 663,
    "7921": 663,
    "8012": 0,
    "8013": 0,
    "8014": 0,
    "8015": 0,
    "8022": 1000,
    "8027": 0,
    "8028": 0,
    "8029": 0,
    "8030": 0,
    "8502": 29120,
    "8507": 28210,
    "8508": 12155,
    "8509": 1651,
    "8510": 3770,
    "8512": 4582.5,
    "8525": 18005,
    "8526": 7605,
    "8527": 12415,
    "8529": 3932.5,
    "8530": 4582.5,
    "8531": 4387.5,
    "8534": 2054,
    "8535": 1807,
    "8536": 2054,
    "8556": 12155,
    "8560": 2125.5,
    "8561": 27365,
    "8564": 1748.5,
    "8566": 1651,
    "8567": 2236,
    "8568": 1982.5,
    "8570": 13715,
    "8571": 31590,
    "8572": 11635,
    "8573": 3965,
    "8574": 1495,
    "8577": 12025,
    "8578": 3672.5,
    "8579": 2125.5,
    "8581": 13000,
    "8584": 8320,
    "8585": 4485,
    "8598": 10335,
    "8602": 3055,
    "8603": 4452.5,
    "8604": 13000,
    "8662": 9880,
    "8663": 9750,
    "8665": 13780,
    "8933": 20000,
    "9064": 3172,
    "9069": 21125,
    "9071": 4225,
    "42418": 3000000,
    "44035": 16,
    "44065": 125,
    "44118": 100,
    "44119": 19,
    "44121": 25,
    "44141": 65,
    "44179": 840,
    "44230": 1440,
    "44250": 150,
    "44253": 300,
    "44254": 150,
    "44255": 262,
    "44256": 300,
    "44257": 412,
    "44258": 150,
    "44259": 382,
    "44260": 900,
    "44287": 100,
    "44288": 100,
    "44356": 620,
    "44357": 760,
    "44406": 64,
    "65267": 1000000,
    "752023": 51000,
    "820035": 50000,
    "820036": 50000,
    "820037": 50000,
    "820038": 50000,
    "820039": 50000,
    "820101": 161.85,
    "820102": 161.85,
    "820107": 219.70000000000002,
    "820108": 275.6,
    "820110": 115.7,
    "820113": 360.75,
    "820117": 949,
    "820120": 825.5,
    "820123": 1865.5,
    "820136": 229.45000000000002,
    "820138": 877.5,
}


def main():
    # import sys
    # sys.activate_stack_trampoline("perf")

    global lodging, modifiers, prices

    initialize_data()

    # test_set = [5, 10, 20, 30, 50, 100, 150, 200, 250, 300, 350, 400, 450, 501]
    # bench_set = [375, 395, 415, 435, 455, 475, 495, 515]
    for budget in [400]:
        config = {
            "name": "Empire",
            "budget": budget,
            "lodging_bonus": 0,
            "top_n": 4,
            "nearest_n": 5,
            "waypoint_ub": 25,
        }
        solver_config = {
            "num_processes": 7,
            "mip_rel_gap": 1e-4,
            "mip_feasibility_tolerance": 1e-4,
            "primal_feasibility_tolerance": 1e-4,
            "time_limit": inf,
            "random_seed": randint(0, 2147483647),
        }
        config["solver"] = solver_config

        data = generate_reference_data(config, prices, modifiers, lodging)
        graph_data = generate_graph_data(data)
        prob = optimize(data, graph_data)
        generate_workerman_data(prob, lodging, data, graph_data)


if __name__ == "__main__":
    main()
